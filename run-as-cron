#!/bin/bash

# original source: https://unix.stackexchange.com/a/580656/316401
# Based on answer by Daladim

# Run as if it was called from cron, that is to say:
#  * with a modified environment
#  * with a specific shell, which may or may not be bash
#  * without an attached input terminal
#  * in a non-interactive shell

set -e
set -u
set -o pipefail

function usage(){
    echo "$0 - Run a script or a command as it would be in a cron job, then display its output"
    echo "Usage:"
    echo "   $0 [command | script]"
}

if [ "$1" == "-h" -o "$1" == "--help" ]; then
    usage
    exit 0
fi

cron_env_file=$HOME/.config/run-as-cron.env

# This file should contain the cron environment.
if [ ! -f "$cron_env_file" ]; then
    echo "Unable to find $cron_env"
    echo "To generate it, run crontab -e and add \"* * * * * /usr/bin/env > $cron_env_file\" and wait a minute to generate it"
    echo "then run crontab -e to remove the line"
    exit 0
fi

the_shell=/bin/sh
dir=$HOME

env_array=("/usr/bin/env" "-i")
while IFS= read -r envi ; do
  var_name=${envi%%=*}
  if [ "$var_name" = "_" ]
  then
    continue
  fi
  if [ "$var_name" = "SHELL" ]
  then
    the_shell=${envi#*=}
  fi
  if [ "$var_name" = "PWD" ]
  then
    dir=${envi#*=}
  fi
  env_array+=("$envi")
done < "$cron_env_file"

printf 'Chosen shell: %s\nChosen working directory: %s\n' "$the_shell" "$dir"
printf 'Environment wrapper:\n'
printf '%s ' "${env_array[@]}"
echo


cmd_string="$*"

# Which shell should we use?
the_shell=$(grep -E "^SHELL=" "$cron_env_file" | sed 's/SHELL=//')
echo "Running with $the_shell the following command: $cmd_string"


# Let's route the output in a file
# and do not provide any input (so that the command is executed without an attached terminal)
so=$(mktemp "/tmp/run-as-cron.out.XXXX")
se=$(mktemp "/tmp/run-as-cron.err.XXXX")
cd "$dir"
"${env_array[@]}" "$the_shell" -c "$cmd_string" >"$so" 2>"$se" < /dev/null

echo -e "Done. Here is \033[1mstdout\033[0m:"
cat "$so"
echo -e "Done. Here is \033[1mstderr\033[0m:"
cat "$se"
rm "$so" "$se"
